services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: voice-notes-db
    environment:
      POSTGRES_USER: ${DB_USER:-voicenotes}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-voicenotes123}
      POSTGRES_DB: ${DB_NAME:-voicenotes}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - voice-notes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-voicenotes}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queue
  redis:
    image: redis:7-alpine
    container_name: voice-notes-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - voice-notes-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: voice-notes-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${DB_USER:-voicenotes}:${DB_PASSWORD:-voicenotes123}@postgres:5432/${DB_NAME:-voicenotes}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      POSTMARK_SERVER_TOKEN: ${POSTMARK_SERVER_TOKEN}
      POSTMARK_INBOUND_ADDRESS: ${POSTMARK_INBOUND_ADDRESS}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NOTION_API_KEY: ${NOTION_API_KEY}
      NOTION_DATABASE_ID: ${NOTION_DATABASE_ID}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      EMAIL_VERIFICATION_REQUIRED: ${EMAIL_VERIFICATION_REQUIRED:-false}
      FORCE_LOCAL_STORAGE: ${FORCE_LOCAL_STORAGE:-true}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME:-voice-notes-audio}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - audio_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - voice-notes-network
    command: npm run dev

  # Frontend
  frontend:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: voice-notes-frontend
    ports:
      - "8080:80"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - voice-notes-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: voice-notes-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - voice-notes-network

volumes:
  postgres_data:
  redis_data:
  audio_uploads:

networks:
  voice-notes-network:
    driver: bridge